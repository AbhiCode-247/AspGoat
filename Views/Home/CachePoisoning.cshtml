@{
    ViewData["Title"] = "Cache Poisoning Demo";
    var host = ViewData["X-Forwarded-Host"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/app.css" />
</head>
<body>

    <h1 style="text-align: center; margin-bottom: 40px;">üß™ Cache Poisoning Demo</h1>

    <div class="container">
        <!-- Vulnerable Functionality -->
        <div class="box">
            <h2>Can you deface this page by injecting content into the cached response üòà?</h2>
        </div>

        <script src="https://@host/index.js"></script>

        <!-- Secure Coding Challenge -->
        <div class="box">
            <h2>üîê Secure the Code</h2>
            <p>This page is vulnerable to <strong>Cache Poisoning.</strong></p>
            <p>Your task is to find the line that causes this and fix it.</p>
            <button class="btn btn-outline-dark mt-2" onclick="openCodePopup()">üïµÔ∏è Identify Vulnerability</button>
        </div>
    </div>

    <div style="text-align:center; margin-top:24px;">
        <h6>
            Note: You may need to host a malicious <strong>JavaScript</strong> with an <strong>XSS</strong> payload in an external ip or server. Easiest way to do this is by creating a <a href="https://github.com" style="display: inline-flex; align-items: center; gap: 0.2em;">GitHub<img src="/expand-arrows.png" alt="External link icon" style="height: 0.85em;"></a> Page.
        </h6>
    </div>

    <h6 style="margin: 25px;">More Information:</h6>
    <ul>
        <li>
            <a href="https://owasp.org/www-community/attacks/Cache_Poisoning">OWASP - Cache Poisoning</a>
        </li>
        <li>
            <a href="https://portswigger.net/web-security/web-cache-poisoning">Portswigger - Cache Poisoning</a>
        </li>
        <li>
            <a href="https://www.invicti.com/learn/web-cache-poisoning/">Invicti - Cache Poisoning</a>
        </li>
    </ul>

    <!-- Cache-Poisoning Code Modal -->
    <div id="codeModal" class="modal">
        <div class="modal-content">
            <h3>üîç Analyze the Code</h3>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 1)">
            [HttpGet]
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 2)">
            [ResponseCache(Duration = 60, Location = ResponseCacheLocation.Any, VaryByHeader = "")]
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 3)">
            public IActionResult CachePoisoning()
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 4)">
            {
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 5)">
            &nbsp;&nbsp;var host = Request.Headers["X-Forwarded-Host"];
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 6)">
            &nbsp;&nbsp;ViewData["X-Forwarded-Host"] = host;
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 7)">
            &nbsp;&nbsp;return View();
            </div>

            <div class="popup-line">
            <input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 8)">
            }
            </div>

            <br />
            <button onclick="closeCodePopup()">Close</button>
        </div>
    </div>

    <!-- Cache-Poisoning Secure Diff Modal -->
    <div id="diffModal" class="diff-modal">
        <div class="diff-content">
            <h3>‚úÖ Secure Version</h3>

            <div class="diff-line removed">
            - [ResponseCache(Duration = 60, Location = ResponseCacheLocation.Any, VaryByHeader = "")]
            </div>
            <div class="diff-line added">
            + // Include X-Forwarded-Host in the cache key to prevent poisoning
            </div>
            <div class="diff-line added">
            + [ResponseCache(Duration = 60, Location = ResponseCacheLocation.Any, VaryByHeader = "X-Forwarded-Host")]
            </div>

            <br />
            <button onclick="closeDiffPopup()">Close</button>
        </div>
    </div>

    <script src="~/js/cp.js"></script>

</body>
</html>
